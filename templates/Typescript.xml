<templateSet group="Typescript">
  <template name="getset" value="public get$PROPERTY_CAPITAL$(): $TYPE$ {&#10;    return this.$PROPERTY$;&#10;}&#10;&#10;public set$PROPERTY_CAPITAL$($PROPERTY$: $TYPE$): void {&#10;    this.$PROPERTY$ = $PROPERTY$;&#10;}" toReformat="false" toShortenFQNames="true">
    <variable name="PROPERTY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROPERTY_CAPITAL" expression="capitalize(PROPERTY)" defaultValue="" alwaysStopAt="false" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="isset" value="public is$PROPERTY_CAPITAL$(): $TYPE$ {&#10;    return this.$PROPERTY$;&#10;}&#10;&#10;public set$PROPERTY_CAPITAL$($PROPERTY$: $TYPE$): void {&#10;    this.$PROPERTY$ = $PROPERTY$;&#10;}" toReformat="false" toShortenFQNames="true">
    <variable name="PROPERTY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROPERTY_CAPITAL" expression="capitalize(PROPERTY)" defaultValue="" alwaysStopAt="false" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="is" value="public is$PROPERTY_CAPITAL$(): $TYPE$ {&#10;    return this.$PROPERTY$;&#10;}&#10;" toReformat="false" toShortenFQNames="true">
    <variable name="PROPERTY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROPERTY_CAPITAL" expression="capitalize(PROPERTY)" defaultValue="" alwaysStopAt="false" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="get" value="public get$PROPERTY_CAPITAL$(): $TYPE$ {&#10;    return this.$PROPERTY$;&#10;}&#10;" toReformat="false" toShortenFQNames="true">
    <variable name="PROPERTY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROPERTY_CAPITAL" expression="capitalize(PROPERTY)" defaultValue="" alwaysStopAt="false" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="set" value="public set$PROPERTY_CAPITAL$($PROPERTY$: $TYPE$): void {&#10;    this.$PROPERTY$ = $PROPERTY$;&#10;}" toReformat="false" toShortenFQNames="true">
    <variable name="PROPERTY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROPERTY_CAPITAL" expression="capitalize(PROPERTY)" defaultValue="" alwaysStopAt="false" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="titar" value="for (let $INDEX$: number = 0; $INDEX$ &lt; $ARRAY$.length; $INDEX$++) {&#10;  $END$&#10;}" description="Iterate elements of array" toReformat="true" toShortenFQNames="true">
    <variable name="INDEX" expression="jsSuggestIndexName()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="ARRAY" expression="jsArrayVariable()" defaultValue="&quot;array&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="false" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="titer" value="for (let $VAR$: $TYPE$ of $ARRAY$) {&#10;  $END$&#10;}" description="Iterate (for each..in) - JavaScript 1.6+" toReformat="true" toShortenFQNames="true">
    <variable name="ARRAY" expression="jsArrayVariable()" defaultValue="&quot;array &quot;" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;o&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="false" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>